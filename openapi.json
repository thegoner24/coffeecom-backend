{
  "openapi": "3.0.0",
  "info": {
    "title": "CoffeeCom Ecommerce API",
    "version": "1.0.0",
    "description": "Full OpenAPI 3.0 specification for CoffeeCom Flask backend. Import into Apidog or Postman to test all endpoints."
  },
  "servers": [
    { "url": "http://localhost:5000" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "409": { "description": "Email already registered" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful, returns JWT token" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "summary": "Get user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User profile info" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "summary": "Update user profile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "username": { "type": "string" },
                  "address": { "type": "string" },
                  "phone_number": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Profile updated" },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Account deleted" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/products/": {
      "get": {
        "summary": "Get all products",
        "responses": {
          "200": { "description": "List of products" }
        }
      },
      "post": {
        "summary": "Create a product (admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" },
                  "image_url": { "type": "string" },
                  "is_available": { "type": "boolean" },
                  "discount_percentage": { "type": "number" },
                  "weight": { "type": "number" },
                  "dimensions": { "type": "string" }
                },
                "required": ["name", "price"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/products/{product_id}": {
      "get": {
        "summary": "Get a product by ID",
        "parameters": [
          { "name": "product_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Product details" },
          "404": { "description": "Product not found" }
        }
      },
      "put": {
        "summary": "Update a product (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "product_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" },
                  "image_url": { "type": "string" },
                  "is_available": { "type": "boolean" },
                  "discount_percentage": { "type": "number" },
                  "weight": { "type": "number" },
                  "dimensions": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "summary": "Delete a product (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "product_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Product deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/api/categories": {
      "get": {
        "summary": "Get all categories",
        "responses": {
          "200": { "description": "List of categories" }
        }
      },
      "post": {
        "summary": "Create a category (admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "parent_category_id": { "type": "integer" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Category created" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/categories/{category_id}": {
      "get": {
        "summary": "Get a category by ID",
        "parameters": [
          { "name": "category_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Category details" },
          "404": { "description": "Category not found" }
        }
      },
      "put": {
        "summary": "Update a category (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "category_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "parent_category_id": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Category updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Category not found" }
        }
      },
      "delete": {
        "summary": "Delete a category (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "category_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Category deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Category not found" }
        }
      }
    },
    "/api/cart": {
      "get": {
        "summary": "Get user's cart",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Cart details" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/cart/items": {
      "post": {
        "summary": "Add item to cart",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": { "type": "integer" },
                  "quantity": { "type": "integer" }
                },
                "required": ["product_id", "quantity"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Item added to cart" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/cart/items/{item_id}": {
      "put": {
        "summary": "Update cart item",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "item_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": { "type": "integer" }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Cart item updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Cart item not found" }
        }
      },
      "delete": {
        "summary": "Remove item from cart",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "item_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Cart item removed" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Cart item not found" }
        }
      }
    },
    "/api/orders": {
      "get": {
        "summary": "Get user's orders",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of orders" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a new order",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_address": { "type": "string" },
                  "billing_address": { "type": "string" },
                  "payment_method": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": { "type": "integer" },
                        "quantity": { "type": "integer" }
                      },
                      "required": ["product_id", "quantity"]
                    }
                  }
                },
                "required": ["shipping_address", "payment_method", "items"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Order created" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/orders/{order_id}": {
      "get": {
        "summary": "Get an order by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "order_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Order details" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Order not found" }
        }
      },
      "put": {
        "summary": "Cancel an order",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "order_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Order cancelled" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Order not found" }
        }
      }
    },
    "/api/transactions/": {
      "get": {
        "summary": "Get user transactions",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of transactions" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a transaction",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": { "type": "integer" },
                  "amount": { "type": "number" },
                  "status": { "type": "string" },
                  "payment_method": { "type": "string" },
                  "payment_id": { "type": "string" }
                },
                "required": ["order_id", "amount"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Transaction created" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/reviews": {
      "get": {
        "summary": "Get all reviews (admin only)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of reviews" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/products/{product_id}/reviews": {
      "get": {
        "summary": "Get reviews for a product",
        "parameters": [
          { "name": "product_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "List of reviews for product" }
        }
      },
      "post": {
        "summary": "Add a review to a product",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "product_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": { "type": "integer" },
                  "comment": { "type": "string" }
                },
                "required": ["rating"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Review added" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/reviews/{review_id}": {
      "put": {
        "summary": "Update a review",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "review_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": { "type": "integer" },
                  "comment": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Review updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Review not found" }
        }
      },
      "delete": {
        "summary": "Delete a review",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "review_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Review deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Review not found" }
        }
      }
    },
    "/api/dashboard/user": {
      "get": {
        "summary": "Get user dashboard stats",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User dashboard info" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/dashboard/admin": {
      "get": {
        "summary": "Get admin dashboard stats",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Admin dashboard info" },
          "401": { "description": "Unauthorized" }
        }
      }
    }
  }
}
